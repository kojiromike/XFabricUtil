@namespace("com.x.inventory.v1")
 
protocol InventoryCapability 
{
	import idl "Error.avdl";
	import idl "Query.avdl";

	record Location
	{
		string name;
		string code;
	}

	record StockItem 
	{
		string skuId;
		int quantity;  // note: quantity is a high consistency field due to serialization issues.
		union{null,Location} location;
	}

	record InventoryError
	{
		union{null,StockItem} stockItem;
		array<com.x.ocl.Error> errors;
	}

	record InventoryGetError
	{
		union{null,string} skuId;
		array<com.x.ocl.Error> errors;
	}

	record LocationError
	{
		union{null,Location} Locations;
		array<com.x.ocl.Error> errors;
	}
 
	/*-------------------------------------------------------------------*/
	/* Message definitions											   */
	/*-------------------------------------------------------------------*/
	@topic("/inventory/stockItem/set")
	@version("1.0.0")
	record SetStockItem
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/setSucceeded")
	@version("1.0.0")
	record SetStockItemSucceeded
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/setFailed")
	@version("1.0.0")
	record SetStockItemFailed
	{
		array<InventoryError> errors;
	}

	@topic("/inventory/stockItem/get")
	@version("1.0.0")
	record GetStockItem
	{
		array<string> stockItemIds;
	}
 
	@topic("/inventory/stockItem/getSucceeded")
	@version("1.0.0")
	record GetStockItemSucceeded
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/getFailed")

	@version("1.0.0")
	record GetStockItemFailed
	{
		array<InventoryGetError> errors;
	}
 
	// TODO: Use Query pattern
	@topic("/inventory/stockItem/search")
	@version("1.0.0")
	record SearchStockItem
	{
		com.x.ocl.Query query;
	}
 
	@topic("/inventory/stockItem/searchSucceeded")
	@version("1.0.0")
	record SearchStockItemSucceeded
	{
		com.x.ocl.Query query;
		com.x.ocl.QueryResult queryResult;
	}
 
	@topic("/inventory/stockItem/searchFailed")
	@version("1.0.0")
	record SearchStockItemFailed
	{
		com.x.ocl.Query query;
		array<com.x.ocl.Error> errors;
	}

	//Note: this update command will update all fields of the StockItem including the quantity field.
	//Use the updateQuantity message to update that field if you wish to perform relative value updates.
	@topic("/inventory/stockItem/update")
	@version("1.0.0")
	record UpdateStockItem
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/updated")
	@version("1.0.0")
	record StockItemUpdated
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/updateFailed")
	@version("1.0.0")
	record UpdateStockItemFailed
	{
		array<InventoryError> errors;
	}

	//This is a relative assignment (+3 or -1), not an absolute assignment of quantity.
	//If you want an absolute assignment, first do a get, compute the delta from that
	//amount to your target amount and send an updateQuantity message with that delta.
	//Then listen for the quantityUpdated response (and compare that quantity to your 
	//desired absolute amount).
	@topic("/inventory/stockItem/updateQuantity")
	@version("1.0.0")
	record UpdateQuantity
	{
		string skuId;
		Location location;
		int quantity;
	}

	@topic("/inventory/stockItem/quantityUpdated")
	@version("1.0.0")
	record QuantityUpdated
	{
		string skuId;
		Location location;
		int quantity;
		StockItem stockItem;
	}
 
	@topic("/inventory/stockItem/updateQuantityFailed")
	@version("1.0.0")
	record UpdateQuantityFailed
	{
		string skuId;
		Location location;
		int quantity;
		com.x.ocl.Error quantityUpdateError;
	}
 
	@topic("/inventory/stockItem/delete")
	@version("1.0.0")
	record DeleteStockItem
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/deleted")
	@version("1.0.0")
	record StockItemDeleted
	{
		array<StockItem> stockItems;
	}
 
	@topic("/inventory/stockItem/deleteFailed")
	@version("1.0.0")
	record DeleteStockItemFailed
	{
		array<InventoryError> errors;
	}

	@topic("/inventory/stockItem/outOfStock")
	@version("1.0.0")
	record OutOfStock
	{
		StockItem stockItem;
	}

	@topic("/inventory/location/create")
	@version("1.0.0")
	record CreateLocation
	{
		array<Location> locations;
	}   

	@topic("/inventory/location/created")
	@version("1.0.0")
	record LocationCreated
	{
		array<Location> locations;
	}

	@topic("/inventory/location/createFailed")
	@version("1.0.0")
	record CreateLocationFailed
	{
		array<LocationError> errors;
	}

	@topic("/inventory/location/update")
	@version("1.0.0")
	record UpdateLocation
	{
		array<Location> locations;
	}

	@topic("/inventory/location/updated")
	@version("1.0.0")
	record LocationUpdated
	{
		array<Location> locations;
	}

	@topic("/inventory/location/updateFailed")
	@version("1.0.0")
	record UpdateLocationFailed
	{
		array<LocationError> errors;
	}

	@topic("/inventory/location/search")
	@version("1.0.0")
	record GetLocation
	{
		com.x.ocl.Query query; 
	}   

	@topic("/inventory/location/searchSucceeded")
	@version("1.0.0")
	record GetLocationSucceeded
	{
		com.x.ocl.Query query;
		com.x.ocl.QueryResult queryResult;
	}

	@topic("/inventory/location/searchFailed")
	@version("1.0.0")
	record SearchLocationFailed
	{
		com.x.ocl.Query query;
		array<com.x.ocl.Error> errors;
	}

	@topic("/inventory/location/deactivate")
	@version("1.0.0")
	record DeactivateLocation
	{
		array<Location> locations;
	}

	@topic("/inventory/location/deactivated")
	@version("1.0.0")
	record LocationDeactivated
	{
		array<Location> locations;
	}

	@topic("/inventory/location/deactivateFailed")
	@version("1.0.0")
	record DeactivateLocationFailed
	{
		array<LocationError> errors;
	}

	@topic("/inventory/location/activate")
	@version("1.0.0")
	record ActivateLocation
	{
		array<Location> locations;
	}

	@topic("/inventory/location/activated")
	@version("1.0.0")
	record LocationActivated
	{
		array<Location> locations;
	}

	@topic("/inventory/location/activateFailed")
	@version("1.0.0")
	record ActivateLocationFailed
	{
		array<LocationError> errors;
	}
}
